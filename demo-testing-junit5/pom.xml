<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.acme.testing.junit5</groupId>
	<artifactId>demo-testing-junit5</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo-testing-junit5</name>
	<url>http://maven.apache.org</url>

	<properties>

		<!-- Compiler & Resources -->
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Dependency Versions -->
		<junit.platform.version>1.6.0</junit.platform.version>
		<junit.jupiter.version>5.6.0</junit.jupiter.version>
		
		<junit.version>4.12</junit.version>
		<junit.vintage.version>5.6.0</junit.vintage.version>
		
		<mockito.version>3.3.3</mockito.version>
		
		<assertj-core.version>3.11.1</assertj-core.version>
		
		<!-- Plugins -->
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
	</properties>
	
	<profiles>
		<profile>
			<id>include</id>
			<properties>
				<includeTags>includeTag</includeTags>
			</properties>
		</profile>
		<profile>
			<id>exclude</id>
			<properties>
				<excludeTags>failingTest</excludeTags>
			</properties>
		</profile>
	</profiles>

	<dependencies>

		<!-- *** Architecture Libraries *** -->
		
		<!-- Use Testing Architecture Library o specific junit version 5.x -->
		
		<!-- 
		<dependency>
			<groupId>com.acme.architecture.testing</groupId>
			<artifactId>architecture-testing</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		-->

		<!-- *** Third Party Libraries *** -->

		<!-- commons-lang3 : class utilities -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.9</version>
		</dependency>
		
		<!-- commons-collections4 : collection utilities -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>
		
		<!-- commons-io : class utilities for : file, streams, file comparator, file filters, ... -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		
		<!-- * JUnit Platform * : Running and discovering test (for use in : tools (Eclipse, Idea,...) and build tools (Maven, Gradle, etc.)) -->
		
		<!-- junit-platform-runner : Platform unit test framework v5 (Add JUnit Platform + TestEngine API) -> Basic execute test -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.platform.version}</version>
		</dependency>
		
		<!-- junit-platform-testkit : [Optional] Platform provides Test Kit API for JUnit Platform -->
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-testkit</artifactId>
			<version>${junit.platform.version}</version>
		</dependency>
		
		<!-- * JUnit Jupiter * -->

		<!-- junit-jupiter-engine : unit test framework v5 (Add JUnit Platform + API) Use write test (include : annotations, etc.) -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
		</dependency>


		<!-- junit-vintage-engine : unit test framework for execute JUnit 3 and JUnit 4 (Add JUnit 4.13 transitively depends version vintage) -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.jupiter.version}</version>
		</dependency>

		
		<!-- junit-jupiter-params : Tool used for parameterized test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.jupiter.version}</version>
		</dependency>

		<!-- assertj-core : assertions for testing -->
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
		</dependency>
		
		<!-- mockito : mocking framework -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
		</dependency>
		
	</dependencies>

	<build>
		<finalName>demo-testing-junit5</finalName>
		<plugins>

			<!-- maven-compiler-plugin : Plugin used to compile the project source -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- maven-resources-plugin : Plugin used to handle the project resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			
			<!-- maven-surefire-plugin : Plugin used to run unit tests - Generate 
				reports in the directory target/surefire-reports -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>

					<includes>
						<include>**/Test*.java</include>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
						<include>**/*TestCase.java</include>
					</includes>
					
					<properties>
						<!-- <includeTags>fast</includeTags> -->
						<excludeTags>slow</excludeTags>
					</properties>
					
					<skipTests>${skip.unit.tests}</skipTests>
					<testFailureIgnore>false</testFailureIgnore>
					
					<groups>${includeTags}</groups>
					<excludedGroups>failingTest</excludedGroups>
					
					<properties>
						<configurationParameters>
							junit.jupiter.execution.parallel.enabled=true
							junit.jupiter.execution.parallel.config.dynamic.factor=2
							junit.platform.output.capture.stdout=true
							junit.platform.output.capture.stderr=true
						</configurationParameters>
					</properties>
					
				</configuration>
			</plugin>

		</plugins>
	</build>
	
	<reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

</project>